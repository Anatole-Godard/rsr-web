name: 'Application'
on: [push]
jobs:
  # build:
  #   timeout-minutes: 60
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions/setup-node@v2
  #       with:
  #         node-version: '14.x'
  #     - name: Build cache
  #       id: cache-build
  #       uses: actions/cache@v2
  #       with:
  #         path: ./build-dep
  #         key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
  #         restore_keys: |
  #           ${{ runner.os }}-build-${{ env.cache-name }}-
  #           ${{ runner.os }}-build-
  #           ${{ runner.os }}-
  #     - name: Install dependencies
  #       run: yarn install --frozen-lockfile
  #     - name: Build application
  #       run: yarn build

#   uses: actions/cache@v2
# with:
#   # See here for caching with `yarn` https://github.com/actions/cache/blob/main/examples.md#node---yarn or you can leverage caching with actions/setup-node https://github.com/actions/setup-node
#   path: |
#     ~/.npm
#     ${{ github.workspace }}/.next/cache
#   # Generate a new cache whenever packages or source files change.
#   key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
#   # If source files changed but packages didn't, rebuild from a prior cache.
#   restore-keys: |
#     ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

  e2e-tests:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    # needs: [build]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
      # - uses: actions/cache@v2
      #   id: cache-build
      #   with:
      #     path: ./build-dep
      #     key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Build application
        run: yarn build
      - name: Install playwright browsers
        run: npx playwright install
      - name: Launch e2e tests
        run: yarn test:e2e --CI
      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: test-artifacts
          path: test-results/